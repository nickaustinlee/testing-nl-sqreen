'use strict';
const INTERFACES = require('../enums').INTERFACES;
const TRANSPORT = require('../enums').TRANSPORT;
const Transports = require('../transports');

const Shimmer = require('shimmer');

module.exports = function (payload, ecoSystemInterface) {

    const request = payload.request;
    if (request !== './kcl_manager') {
        return;
    }

    const module = payload.module;
    const transport = ecoSystemInterface.getInterface(INTERFACES.TRANSPORT);

    Shimmer.wrap(module.prototype, '_onRecordProcessorAction', (original) => {

        return function (action) {

            if (!action || action.action !== 'processRecords') {
                return original.apply(this, arguments);
            }

            transport.startIncomingTransaction(action, (session, budget) => {


                try {
                    budget.startCount();

                    const todo = transport.shouldPropagate(TRANSPORT.SCOPE.PRODUCER);
                    const trigger = todo.trigger;
                    const fields = todo.fields;

                    if (fields.length !== 0) {
                        const resolved = new Transports.ConsumerTransport();
                        resolved.addMessageType(fields, TRANSPORT.TRANSPORT_TYPE.KINESIS);
                        resolved.addTA(fields, ecoSystemInterface);
                        transport.propagate(resolved, trigger);
                    }
                    budget.stopCount();
                }
                catch (_) {}
                return original.apply(this, arguments);
            });
        };
    });
};
