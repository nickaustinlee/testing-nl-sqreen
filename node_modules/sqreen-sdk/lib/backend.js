'use strict';
const Axios = require('axios');
const Errors = require('./errors');

const BASE_INGESTION_URL = 'https://ingestion.sqreen.com/';
const ENDPOINTS = {
    BATCHES: 'batches',
    SIGNALS: 'signals',
    TRACES: 'traces'
};

const HTTP_CODES = {
    INVALID_AUTH: 401,
    INVALIDE_PAYLOAD: 422
};

const STATE = {
    API_KEY: '',
    SESSION_KEY: ''
};

module.exports.setAPIKey = function (token) {

    STATE.API_KEY = token;
};

module.exports.setSessionKey = function (token) {

    STATE.SESSION_KEY = token;
};

const getHeaders = module.exports._getHeaders = function () {

    if (STATE.API_KEY) {
        return { 'x-api-key': STATE.API_KEY };
    }
    if (STATE.SESSION_KEY) {
        return { 'x-session-key': STATE.SESSION_KEY };
    }
    return null;
};

const report = function (endpoint, payload, headers) {

    if (headers === null) {
        return Promise.reject(new Errors.AuthenticationNotInitError());
    }
    return Axios.post(BASE_INGESTION_URL + endpoint, payload,  { headers })
        .catch((error) => {

            const status = error.response && error.response.status;
            if (status === HTTP_CODES.INVALID_AUTH) {
                return Promise.reject(new Errors.AuthenticationError());
            }
            if (status === HTTP_CODES.INVALIDE_PAYLOAD) {
                return Promise.reject(new Errors.InvalidSignalError(error.response.data.message));
            }
            return Promise.reject(new Errors.UnknownError(JSON.stringify(error.message)));
        });
};

module.exports.reportBatch = function (batch, headers) {

    headers = headers || getHeaders();
    return report(ENDPOINTS.BATCHES, batch, headers);
};

module.exports.reportSignal = function (signal, headers) {

    headers = headers || getHeaders();
    return report(ENDPOINTS.SIGNALS, signal, headers);
};

module.exports.reportTrace = function (trace, headers) {

    headers = headers || getHeaders();
    return report(ENDPOINTS.TRACES, trace, headers);
};


