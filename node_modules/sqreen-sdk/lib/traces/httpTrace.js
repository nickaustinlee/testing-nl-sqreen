'use strict';
const Trace = require('../trace');

const getInfra = function () {

    const OS = require('os');
    return {
        agent_type: 'nodejs',
        os_type: OS.arch() + '-' + OS.type(),
        hostname: OS.hostname(),
        runtime_type: 'node',
        runtime_version: process.version
    };
};

module.exports = class extends Trace {

    constructor(req, clientIp) {
        super();

        this.location_infra = { infra: getInfra() };
        this.actor = {
            ip_address: clientIp
        };
        this.context = {
            type: 'http',
            request: {
                scheme: 'http',
                verb: req.method,
                host: req.heades.host,
                remote_ip: req.connection.remoteAddress,
                remote_port: req.connection.remotePort,
                path: req.url,
                referer: req.headers.referer
            }
        };
    }

    closeAndReport(response) {

        const res = { status: response.statusCode };
        if (typeof response.getHeaders === 'function') {
            const headers = response.getHeaders();
            res.content_length = headers['content-length'] || headers['Content-Length'];
            res.content_type = headers['content-type'] || headers['Content-Type'];
        }
        this.context.response = res;
        this.batch();
    }
};
