/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const NS = require('./ns');
const kSQREEN_SYNC_BLOCKING = require('../../enums/agent').kSQREEN_SYNC_BLOCKING;
const Util = require('./util');

const FunctionPatcher = require('../functionPatcher');

const config = {
    reveal: typeof process.env.REVEAL_OUTPUT === 'string'
};

const holder = {
    inspectOutput: function (req, res,output) {},
    sqreenMiddleWare: function (req, res, next) {

        return next();
    }
};
FunctionPatcher.patchFunction(holder, 'sqreenMiddleWare', { name: 'sqreen' }, 'express');
FunctionPatcher.patchFunction(holder, 'inspectOutput', { name: 'sqreen' }, 'express');
module.exports.sqreenMiddleWare = holder.sqreenMiddleWare;
module.exports.sqreenErrMiddleWare = function (err, req, res, next) { // this empty middleware is placed to ensure handle_error will be called!

    try {
        if (err[kSQREEN_SYNC_BLOCKING] === true) {
            return Util.dropRequest(req, res);
        }
    }
    catch (_) {}
    next(err);
};

module.exports.dropRequest = function (req, res) {

    require('../../rules/rules-callback/utils').dropRequest(['', req, res]);
};

module.exports._shimBind = NS._shimBind;
module.exports._shimRun = NS._shimRun;
module.exports.getNS = NS.getNS;
module.exports._config = config;
module.exports._holder = holder;
