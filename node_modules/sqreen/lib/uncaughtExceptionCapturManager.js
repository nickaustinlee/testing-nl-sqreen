'use strict';
// Ok this does not cover our need with domain, let's keep it on the side for potential future uese
// see https://github.com/nodejs/node/blob/460c81dc0e088e696e9a7a476254ff381e8474ce/lib/internal/process/execution.js
const exceptionHandlerState = { captureFn: null };
const setUncaughtExceptionCaptureCallback = process.setUncaughtExceptionCaptureCallback;

const newSetUncaughtExceptionCaptureCallback = function (fn) {

    setUncaughtExceptionCaptureCallback.apply(this, arguments);
    exceptionHandlerState.captureFn = fn;
};

module.exports.isUsable = false;
module.exports.init = function () {

    if (process.hasUncaughtExceptionCaptureCallback() || process.setUncaughtExceptionCaptureCallback === newSetUncaughtExceptionCaptureCallback) {
        // there is (maybe, case 1) already something in place. This is weird
        // TODO: notification of some kind?
        return;
    }
    module.exports.isUsable = true;
    process.setUncaughtExceptionCaptureCallback = newSetUncaughtExceptionCaptureCallback;
};

module.exports.getUncaughtExceptionCaptureCallback = function () {

    return exceptionHandlerState.captureFn;
};
