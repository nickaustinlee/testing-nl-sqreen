/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Ecosystem = require('../../../lib/ecosystem/index');
const instrumentationInterface = Ecosystem.getInterface('instrumentation');
const EE = require('events');

describe('Ecosystem', () => {

    describe('instrumentationInterface', () => {

        it('should place a hook on event listeners', { plan: 3 }, (done) => {

            const ee = new EE();
            const getHook = function (se, listener) {

                return function (evt) {

                    expect(evt).to.equal('foo');
                    return listener.apply(this, arguments);
                };
            };
            instrumentationInterface.strategies.patchEventListeners(ee, 'myEvent', getHook);

            try {
                ee.on('myEvent');
            }
            catch (e) {
                expect(e).to.exist();
            }
            ee.on('end', () => {

                done();
            });
            ee.on('myEvent', (arg) => {

                expect(arg).to.equal('foo');
            });
            ee.emit('myEvent', 'foo');
            ee.emit('end', 'bar');
        });
    });
});
