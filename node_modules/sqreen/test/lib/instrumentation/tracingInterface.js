/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const TracingInterface = require('../../../lib/instrumentation/tracingInterface');
describe('TracingInterface', () => {

    describe('shouldTrace', () => {

        it('should cover tracing cases', { plan: 6 }, (done) => {

            expect(TracingInterface.shouldTrace('bar')).to.equal(null);
            TracingInterface.updateScopeSampling('bar', { enabled: false });
            expect(TracingInterface.shouldTrace('bar')).to.equal(null);
            TracingInterface.updateScopeSampling('bar', { enabled: true, sampling: [{ calls: 1, max_calls: 1  }] });
            expect(TracingInterface.shouldTrace('bar')).to.equal({ calls: 1, max_calls: 1 });
            expect(TracingInterface.shouldTrace('bar')).to.equal(null);
            TracingInterface.updateScopeSampling('*', { enabled: true, sampling: [{ calls: 1, max_calls: 1  }] });
            expect(TracingInterface.shouldTrace('bar')).to.equal({ calls: 1, max_calls: 1  });
            expect(TracingInterface.shouldTrace('bar')).to.equal(null);
            done();
        });
    });

    describe('getTracing_identifier', () => {

        it('should return the request uuid', { plan: 2 }, (done) => {

            expect(TracingInterface.getTracing_identifier()).to.not.equal('');
            expect(TracingInterface.getTracing_identifier(999)).to.equal('.999');
            done();
        });
    });


});
